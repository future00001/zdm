name: zdm_crawler

on:
  schedule:
    - cron: "0 7-23/2 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # 重要：授予 GITHUB_TOKEN 写入仓库内容的权限
    permissions:
      contents: write # <--- 添加这行，这是最关键的修改

    steps:
    - uses: actions/checkout@v4 # 建议使用最新稳定版
      # 如果你的 database.db 可能很大，或者你需要完整的历史记录来做某些 diff 操作
      # with:
      #   fetch-depth: 0 # 获取所有历史记录，如果需要

    - name: Set up JDK
      uses: actions/setup-java@v4 # 建议使用最新稳定版
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: |
        mvn package
        cp ./target/zdm-0.0.1.jar ./zdm.jar

    - name: main logic
      env:
        maxPageSize: 20
        minVoted: 10
        minComments: 5
        MIN_PUSH_SIZE: 20
        emailHost: smtp.qq.com
        emailPort: 465
        emailAccount: ${{secrets.emailAccount}}
        emailPassword: ${{secrets.emailPassword}}
        spt: SPT_cFpaPZUffAdHkoutTInnf46Dd604 # 注意：这是一个硬编码的密钥，如果敏感，建议也放入 secrets
        detail: false
      run: java -jar zdm.jar

    # 可选：配置 git 用户信息（actions-go/push 的 author 参数通常已足够）
    # 如果 push action 没有正确设置作者，可以取消下面几行的注释
    # - name: Configure Git User
    #   run: |
    #     git config --global user.name "GitHub Actions"
    #     git config --global user.email "actions@github.com"

    - name: Stage changed database file
      run: |
        # 检查 database.db 是否存在，避免因文件不存在而报错
        if [ -f database.db ]; then
          git add database.db
        else
          echo "database.db not found, skipping add."
        fi

    - name: Commit and Push changes
      uses: actions-go/push@master # 仍然建议查找并使用稳定版本如 @v3
      with:
        author-email: 'actions@github.com'
        author-name: 'GitHub Actions'
        commit-message: 'update database.db' # 建议使用更具体的提交信息
        # 选项 1 (推荐): 不传递 token，让 action 自动使用 GITHUB_TOKEN
        # (确保上面 job 级别的 permissions: contents: write 已设置)

        # 选项 2: 如果你确实想用自定义的 PAT (存储在 secrets.YOUR_PAT_SECRET_NAME)
        # token: ${{secrets.GIT_TOKEN}}
        # 请确保 YOUR_PAT_SECRET_NAME 是你仓库中实际的 secret 名称 (例如 GIT_PAT 或 PERSONAL_ACCESS_TOKEN)
        # 并且这个 PAT 有 'repo' 权限。
        # 你原来的 `secrets. GIT_TOKEN` 中间有空格，这是错误的。如果是 `secrets.GIT_TOKEN`，也需要确保它存在且有效。

        # create-commit: true # 大部分此类 push action 默认会创建提交
        # force: false # 默认为 false，通常是好的
        # fail-if-empty: false # 如果没有改动，不报错（这个 action 的默认值可能不同，请查阅其文档）
