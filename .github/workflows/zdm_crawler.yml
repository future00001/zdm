name: zdm_crawler

on:
  #将下面两行代码取消注释
  schedule:
    - cron: "0 7-23/2 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: # <--- 重要修改点 1: 在 job 级别授予写入权限
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
        mvn package
        cp ./target/zdm-0.0.1.jar ./zdm.jar
    - name: main logic
      env:
        #爬取数据时的最大翻页数量
        maxPageSize: 20
        # The number of point values > minVoted before it will be pushed, fill 0 as all push
        minVoted: 10
        # The number of comments > minComments, it will be pushed, fill in 0 for all pushes
        minComments: 5
        # The number of discount information >MIN_PUSH_SIZE will be emailed, otherwise it will be accumulated until the next trigger task and then decide whether to push it. It is not recommended to fill in too small numbers to avoid too many emails
        MIN_PUSH_SIZE: 20
        # SMTP server address of the mailbox (the example is the configuration of QQ mailbox, non-QQ mailbox needs to be modified)
        emailHost: smtp.qq.com
        # Mailbox SMTP service port
        emailPort: 465
        # If the email address for receiving the discount information is empty, it means that the email address will not be pushed
        emailAccount: ${{secrets.emailAccount}}
        # If the authorization code of the email address receiving the discount information is empty, it means that the email will not be pushed
        emailPassword: ${{secrets.emailPassword}}
        # If the spt of WxPusher is empty, it means that Wx is not pushed
        spt: SPT_cFpaPZUffAdHkoutTInnf46Dd604
        # true: Print out the detailed information (the list of preferential information to be pushed, the black and white words used when filtering) in the download stage, due to the large amount of text, you can change it to false after calling through the project
        detail: false
      run: java -jar zdm.jar
    #保存已推送和暂未推送的优惠信息
    - name: git add files
      run: |
        # 建议在这里配置 git 用户信息，确保 commit 有正确的作者
        git config --global user.name 'GitHub Actions (zdm_crawler)'
        git config --global user.email 'actions@github.com'
        git add database.db
        # 你也可以在这里直接 commit，如果 actions-go/push 的 create-commit 功能不符合你的精确需求
        # 例如: git diff --staged --quiet || git commit -m "Update database.db by zdm_crawler"
    - name: commit & push
      uses: actions-go/push@v3 # <--- 建议修改点: 使用一个稳定的版本号，例如 v3 (请检查该action的最新稳定版)
      with:
        author-email: 'actions@github.com' # 如果 create-commit: true，这些通常由action设置
        author-name: 'GitHub Actions'   # 或者使用你在上面 git config 设置的值
        commit-message: 'update database.db by zdm_crawler' # <--- 建议修改点: 更具体的提交信息
        # token: ${{secrets.GIT_TOKEN}} # <--- 重要修改点 2:
                                         # 选项 A (推荐): 完全移除这行。Action会默认使用 GITHUB_TOKEN，
                                         # 它现在因为上面的 'permissions' 设置而拥有了写入权限。
                                         # 选项 B: 如果你确定 GIT_TOKEN 是一个拥有 repo 权限的 PAT，
                                         # 可以保留，但更推荐使用 GITHUB_TOKEN。
                                         # 选项 C: 如果你是指 GITHUB_TOKEN，应写为 token: ${{ secrets.GITHUB_TOKEN }}
        create-commit: true # <--- 重要修改点 3: 确保这个设置为 true，让 action 负责创建 commit
        fail-if-empty: false # 如果 database.db 没有变化，则不报错退出 (可选，但通常有用)
        # force: false # 保持 false 除非你明确知道需要强制推送
        # ref: refs/heads/master # 通常不需要，会推送到当前检出分支
        # remote: origin
        # remote-ref: refs/heads/master
